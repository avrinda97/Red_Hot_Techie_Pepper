2011-08-01T20:40:00.000Z	gamingdroid		Any specific reasons why I should go 32bit instead of 64bit on Ubuntu Server 11.04 for a webserver?
2011-08-01T20:40:00.000Z	Polah	gamingdroid	Application compatibility perhaps.
2011-08-01T20:41:00.000Z	Polah	gamingdroid	For a webserver just for that, i.e. Apache/MySQL/PHP there shouldn't be an issue with compabitility though
2011-08-01T20:41:00.000Z	gamingdroid	Polah	it's python/django + postgresql, etc
2011-08-01T20:44:00.000Z	gamingdroid	Polah	^^
2011-08-01T20:45:00.000Z	gamingdroid	Polah	no, it is a web framework using python
2011-08-01T20:45:00.000Z	Polah	gamingdroid	Yeah, so you need a web server to serve that. If you're using Python for coding and PostgreSQL for databasing
2011-08-01T20:46:00.000Z	gamingdroid	Polah	I'm going to use both apache/modwsgi and nginx for webserving
2011-08-01T20:46:00.000Z	Polah	gamingdroid	nginx and Apache? Why would you use two webservers?
2011-08-01T20:47:00.000Z	gamingdroid	Polah	the reason is in django generally you run one server to handle all the dynamic stuff and another to handle static content.
2011-08-01T20:47:00.000Z	gamingdroid	Polah	* webserver
2011-08-01T20:48:00.000Z	Polah	gamingdroid	That seems strange. Could be beneficial, though
2011-08-01T20:49:00.000Z	gamingdroid	Polah	it's because dynamic pages requires more heavy webserver processes, while static content is just a straight read from disk. sort of makes sense.
2011-08-01T20:50:00.000Z	Polah	gamingdroid	It would allow processing of dynamic and static content simultaneously from each process over multiple processing cores but you'd have to take into consideration communication between both processes.
2011-08-01T20:51:00.000Z	gamingdroid	Polah	nope, no intercommunication necessary. it is asking for a completely independent resource alas index.php and then something.jpg
2011-08-01T20:51:00.000Z	gamingdroid	Polah	or am I misunderstanding
2011-08-01T20:52:00.000Z	Polah	gamingdroid	Of course there's communication between the two processes. The webserver sending the content, lets say Apache, would need to offload the dynamic parts for processing to nginx, then nginx would need to send the data back to Apache to be served to the client.
2011-08-01T20:55:00.000Z	gamingdroid	Polah	The way it works is the browser requests www.domain.com, apache responds with a dynamically generated html file. the browser parses it, request the images, css files (all those are static)... unless you are talking about when an incoming request, how do you know which webserver it goes to?
2011-08-01T20:57:00.000Z	Polah	gamingdroid	A client will request say a login form that uses Python for it's backend. Apache can serve the CSS and HTML itself to generate the form, but when the client then fills it out and sends it off and you have a second webserver for handling dynamic content, Apache would receive the client's data, send it to nginx which would then process that data and compare it to the data in a database. If it's correct then nginx will say it's oka
2011-08-01T20:59:00.000Z	gamingdroid	Polah	when a request is for a login form, then the actual form page is generated by apache/modwsgi, but the css/images are requested (possibly through a different domain) are handled by nginx
2011-08-01T21:00:00.000Z	gamingdroid	Polah	when the credentials is sent, apache processes the request, a success webpage is then presented to the user, but the images and css is still served by nginx

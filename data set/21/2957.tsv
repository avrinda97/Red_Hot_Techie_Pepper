2011-11-30T17:47:00.000Z	angelete2		hi
2011-11-30T17:48:00.000Z	angelete2		i have a problem with my 10.04 server
2011-11-30T17:48:00.000Z	angelete2		my cron is going wrong
2011-11-30T17:48:00.000Z	angelete2		i've added this entry to my /etc/crontab: 46 13 * * *     root    test -x /usr/sbin/anacron || touch /root/kkzaddd.txt
2011-11-30T17:49:00.000Z	angelete2		in syslog i've seen the execution log, but kkzaddd.txt file has not created
2011-11-30T17:50:00.000Z	llutz	angelete2	ls -l /usr/sbin/anacron   says what?
2011-11-30T17:51:00.000Z	angelete2	llutz	28 -rwxr-xr-x 1 root root 26272 2010-03-05 03:29 /usr/sbin/anacron
2011-11-30T17:52:00.000Z	llutz	angelete2	so "test-x  /usr/sbin/anacron " is true and the || do something part skipped
2011-11-30T17:52:00.000Z	llutz	angelete2	what do you expect your cronjob should do?
2011-11-30T17:53:00.000Z	angelete2	llutz	cron is doing nothing at all, that's why i'm testing it
2011-11-30T17:54:00.000Z	llutz	angelete2	<angelete2> in syslog i've seen the execution log"   <- so cronjob was executed?
2011-11-30T17:55:00.000Z	llutz	angelete2	what is your problem then?
2011-11-30T17:57:00.000Z	llutz	angelete2	command1 || command2     means: execute command2 only if command1 _fails_
2011-11-30T18:00:00.000Z	llutz	angelete2	so, as long as your /usr/sbin/anacron is existing+executable (test -x), your "touch .." won't run
2011-11-30T18:06:00.000Z	angelete2	llutz	really test command is not being executing
2011-11-30T18:06:00.000Z	llutz	angelete2	it is [13:55:07] <angelete2> Nov 30 13:46:01 XXXXX CRON[11402]: (root) CMD (   test -x /usr/sbin/anacron || touch /root/kkzaddd.txt )
2011-11-30T18:07:00.000Z	llutz	angelete2	"*/5 * * * *     root    test -x /usr/sbin/anacron && touch /root/kkzaddd.txt"    use this as a test
2011-11-30T18:10:00.000Z	llutz	angelete2	test --version gives nothing back (odd). but i'm not on ubuntu yet
2011-11-30T18:11:00.000Z	llutz	angelete2	sure, you want to read "man bash" about && and || and what they do
2011-11-30T18:11:00.000Z	llutz	angelete2	command1 || command2     means: execute command2 _only_ if command1 _fails_
2011-11-30T18:12:00.000Z	llutz	angelete2	 sure, one does use || to tell "do something OR tell me it failed"

2011-09-20T08:26:00.000Z	mordof	lostson	appname & doesn't work from terminal
2011-09-20T08:27:00.000Z	lostson	mordof	always works for me
2011-09-20T08:27:00.000Z	mordof	lostson	it passes it as a command line parameter..
2011-09-20T08:28:00.000Z	lostson	mordof	ok then
2011-09-20T08:28:00.000Z	mordof	lostson	sarcasm?
2011-09-20T08:29:00.000Z	lostson	mordof	no not sarcasm if i run firefox & in a terminal it launches firefox and my terminal is then free for me to use
2011-09-20T08:29:00.000Z	mordof	lostson	hmm.. any idea why it would be different for me?
2011-09-20T08:29:00.000Z	lostson	mordof	so as to why it wouldnt work for you I have no idea
2011-09-20T08:29:00.000Z	mordof	lostson	there's gotta be something that changes it.. *thinks*
2011-09-20T08:51:00.000Z	mordof	lostson	ok, so it's working.. just that some programs continue outputting to that terminal until i hit enter
2011-09-20T08:51:00.000Z	lostson	mordof	yep
2011-09-20T08:52:00.000Z	mordof	lostson	even after i hit enter.. lol
2011-09-20T08:52:00.000Z	mordof	lostson	they're in the background - so warnings still show up :\
2011-09-20T08:53:00.000Z	mordof	lostson	ah well, i'm not that concerned about that. My main goal was to be able to close unnecessary terminal windows, so this'll suffice
2011-09-20T08:54:00.000Z	lostson	mordof	when it does that to me i hit ctrl-c and then it stops the app printing to the terminal
2011-09-20T08:54:00.000Z	mordof	lostson	ah there's that too :) good to know
2011-09-20T22:49:00.000Z	mordof	lostson	another viable alternative (and a more reliable one) is using nohup
2011-09-20T22:50:00.000Z	mordof	lostson	even with the & operator, some windows still rely on the terminal. it's odd, but using nohup it prevents output, and if the window tries to hold on to the terminal - it'll just keep nohup from finishing. in which case ctrl+c kills it, but the window stays running
2011-09-21T22:20:00.000Z	mordof	lostson	you around?

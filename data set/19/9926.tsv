2007-09-01T05:47:00.000Z	z0rz		Is it possible to make screen a user's shell?
2007-09-01T05:47:00.000Z	ladydoor	z0rz	not exactly, but you can put a little script in your .bashrc
2007-09-01T05:48:00.000Z	ladydoor	z0rz	...just a sec
2007-09-01T05:51:00.000Z	ladydoor	z0rz	Actually, nevermind. I don't believe so, but calling screen can't be a huge hassle...
2007-09-01T05:51:00.000Z	z0rz	ladydoor	Right  but this is for a classroom, and I'd like to be able to screen -x my students so that I can see what they are doing...
2007-09-01T05:52:00.000Z	ladydoor	z0rz	Oh! Well, couldn't you just require them to use screen?
2007-09-01T05:52:00.000Z	z0rz	ladydoor	heh.. they're not going to type screen -r everytime they open a terminal.. Plus I want to see what they are doing behind my back.. and I'm sure they'd not use screen -r then
2007-09-01T05:53:00.000Z	ladydoor	z0rz	Touche.
2007-09-01T05:55:00.000Z	ladydoor	z0rz	Yeah, I wouldn't advise putting "screen" in their .bashrc, unless you were to test that they were already in screen
2007-09-01T05:56:00.000Z	ladydoor	z0rz	Otherwise it recurses...
2007-09-01T05:56:00.000Z	ladydoor	z0rz	So something like "if [[ $TERM != screen] ] ; then ; screen ; fi"
2007-09-01T05:58:00.000Z	ladydoor	z0rz	(Though I have no idea what effect this may have on, say, nongraphical login shells if you wanted to start X)
2007-09-01T06:05:00.000Z	ladydoor	z0rz	Good luck!
2007-09-01T06:31:00.000Z	ladydoor	z0rz	Put it in .bash_logout, I believe
2007-09-01T06:31:00.000Z	z0rz	ladydoor	Even for a desktop logout?
2007-09-01T06:32:00.000Z	ladydoor	z0rz	Oh, you mean when they quit the WM?
2007-09-01T06:32:00.000Z	z0rz	ladydoor	Yes
2007-09-01T06:33:00.000Z	ladydoor	z0rz	Oh...hm. Well, good luck.
2007-09-01T06:33:00.000Z	z0rz	ladydoor	heh.. thanks

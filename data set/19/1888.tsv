2011-01-19T20:00:00.000Z	shcherbak	ExpDate	you can use grep and awk to make more of it (what is ls call to not show dorectories?)
2011-01-19T20:01:00.000Z	ExpDate	shcherbak	what do you meant "ls call to not show dorectories"
2011-01-19T20:01:00.000Z	shcherbak	ExpDate	just thinking to myself...
2011-01-19T20:04:00.000Z	shcherbak	ExpDate	access time is -u so -ltu, sort by access time and -lt by creation.
2011-01-19T20:05:00.000Z	ExpDate	shcherbak	that's not works to
2011-01-19T20:06:00.000Z	shcherbak	ExpDate	-r (reverse)?
2011-01-19T20:06:00.000Z	ExpDate	shcherbak	i did reverse too
2011-01-19T20:08:00.000Z	ExpDate	shcherbak	erUSUL:  http://pastebin.com/QGmavRqV
2011-01-19T20:10:00.000Z	shcherbak	ExpDate	but time rules, try -lur
2011-01-19T20:12:00.000Z	shcherbak	ExpDate	but without -r is ok? it need to be just printed backwards?
2011-01-19T20:12:00.000Z	ExpDate	shcherbak	it is same,
2011-01-19T20:12:00.000Z	ExpDate	shcherbak	so, did u get the idea, right? I want to sort based on the time,  then if i got files that created at the same time, then i sort them based on name
2011-01-19T20:12:00.000Z	shcherbak	ExpDate	what is order for -ltu (from top)?
2011-01-19T20:13:00.000Z	ExpDate	shcherbak	-r  is needed, because i wanted the oldes time printed first
2011-01-19T20:14:00.000Z	shcherbak	ExpDate	you can just number output and sort it later.
2011-01-19T20:15:00.000Z	ExpDate	shcherbak	do you think it would not possible to be done in a single command, ?
2011-01-19T20:17:00.000Z	shcherbak	ExpDate	so: in loop: i=1 for line in $(ls -ltu); do echo $i $line > soting; done; sort -r; (test it and fix mistakes)
2011-01-19T20:20:00.000Z	ExpDate	shcherbak	so, basically ls could do it in a single command,
2011-01-19T20:20:00.000Z	shcherbak	ExpDate	good, because this i wrote was very bad.

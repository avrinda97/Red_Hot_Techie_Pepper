2008-09-05T22:27:00.000Z	banisterfiend		how do i set a variable equal to the exit status of a shell command? (using bash)
2008-09-05T22:27:00.000Z	LjL	banisterfiend	variable=$?
2008-09-05T22:28:00.000Z	banisterfiend	LjL	ok, thanks..that's nice. but can't i just go var=`tar (etc)`
2008-09-05T22:28:00.000Z	banisterfiend		or var=tar(etc)
2008-09-05T22:29:00.000Z	LjL	banisterfiend	that puts the *output* of the command into the variable, not the *exit status*
2008-09-05T22:29:00.000Z	LjL	banisterfiend	and, it's deprecated too, you should use $() instead of ``
2008-09-05T22:29:00.000Z	banisterfiend	LjL	ah ok, so how would i test the exit status in an if statement of a shell command? if tar(etc)
2008-09-05T22:30:00.000Z	LjL	banisterfiend	you don't. run the command first, then "if [[ $? -eq 0 ]]; then ..."
2008-09-05T22:30:00.000Z	LjL	banisterfiend	$? is the only variable that gives you access to exit status (well, not strictly true, there's another for piped commands)
2008-09-05T22:30:00.000Z	banisterfiend		ok thanks, LjL, how of interest, why the double [[ ?
2008-09-05T22:30:00.000Z	banisterfiend		out*
2008-09-05T22:31:00.000Z	LjL	banisterfiend	with "-eq", you don't really need them, i'm just used to having them. they're used for advanced test operators in bash.
2008-09-05T22:31:00.000Z	banisterfiend		ok cheer
2008-09-05T22:31:00.000Z	banisterfiend		s
2008-09-05T22:31:00.000Z	banisterfiend		you've helped alot thanks
2008-09-05T22:32:00.000Z	LjL	banisterfiend	wait, what did i just say...
2008-09-05T22:32:00.000Z	LjL	banisterfiend	you *can* do direct tests on exit status
2008-09-05T22:32:00.000Z	LjL	banisterfiend	if tar etc; then ...    will work

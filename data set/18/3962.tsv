2010-09-22T06:34:00.000Z	rames		dormantoden: pidof?
2010-09-22T06:35:00.000Z	DormantOden	rames	perfect, how would i use that in conjunction with fg ?
2010-09-22T06:35:00.000Z	DormantOden	rames	can i just do fg pidof foobar?
2010-09-22T06:35:00.000Z	rames	DormantOden	backticks are good to learn about ... try "echo xxx `ls` xxx"
2010-09-22T06:36:00.000Z	rames	DormantOden	and then "echo xxx $( ls ) xxx" ... (more properly subshell, backticks are a little dangerous due to nesting)
2010-09-22T06:36:00.000Z	rames	DormantOden	but i think fg works better with the output of "jobs", not pids, exactly
2010-09-22T06:38:00.000Z	DormantOden	rames	hmm,ok. Im just wondering how I can grab a process in the background and send it a command. This seemed like a good idea? you think its the best way?
2010-09-22T06:38:00.000Z	rames	DormantOden	it looks like it might be tricky to do what you're wanting to do...
2010-09-22T06:38:00.000Z	DormantOden		just want to shut down a server cleanly, rather than just killall -9 it =P
2010-09-22T06:39:00.000Z	rames	DormantOden	try "jobs | grep PROGRAM | awk -- '{print $3}'  "
2010-09-22T06:40:00.000Z	rames	DormantOden	actually in that case if you're trying to send a signal to a running program, not a backgrounded process (backgrounded == "ctrl-z / suspended in shell")
2010-09-22T06:40:00.000Z	DormantOden		ah, no im using & when running it
2010-09-22T06:42:00.000Z	rames	DormantOden	ah... well, the output of "jobs" is nice to know about anyway, but "kill -1 $( pidof PROGRANAME )" should do what you want
2010-09-22T06:42:00.000Z	DormantOden	rames	that would kill it again though?
2010-09-22T06:42:00.000Z	rames	DormantOden	kill -1 is the "hup / restart" signal
2010-09-22T06:43:00.000Z	DormantOden		so it would stop like it should?
2010-09-22T06:43:00.000Z	rames	DormantOden	sending signals (man kill) uses a pid... pidof FOO gives you the pid of program FOO
2010-09-22T06:44:00.000Z	rames	DormantOden	or you can say "jobs" then "fg 1", etc. (should bring it to foreground)
